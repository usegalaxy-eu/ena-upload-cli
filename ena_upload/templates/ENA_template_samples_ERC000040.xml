<?xml version="1.0" encoding="UTF-8"?>
<?python
import pandas as pd
import sys
def attributetest(row, column):
    if hasattr(row, column) and pd.notna(row[column]) and not str(row[column]).isspace():
        return True 
def mandatorytest(row, column, index):
    if hasattr(row, column) and pd.notna(row[column]) and not str(row[column]).isspace():
        return True 
    else:
        print("MISSING VALUE ERROR: The mandatory column '"+ str(column) + "' is not filled in at row '" + str(index) + "'" + "\n")
        sys.exit("This process is terminated")
?>
<SAMPLE_SET xmlns:py="http://genshi.edgewall.org/"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="ftp://ftp.sra.ebi.ac.uk/meta/xsd/sra_1_6/SRA.sample.xsd">
    <py:for each="index, row in df.iterrows()">
    <SAMPLE alias="${row.alias}" center_name="${center}">
        <py:if test="mandatorytest(row, 'title', index)">
        <TITLE>${row.title}</TITLE>
        </py:if>
        <SAMPLE_NAME>
            <py:if test="mandatorytest(row, 'taxon_id', index)">
            <TAXON_ID>${row.taxon_id}</TAXON_ID>
            </py:if>
            <SCIENTIFIC_NAME>${row.scientific_name}</SCIENTIFIC_NAME>
            <py:if test="attributetest(row, 'common_name')">
            <COMMON_NAME>${row.common_name}</COMMON_NAME>
            </py:if>
        </SAMPLE_NAME>
        <py:if test="attributetest(row, 'sample_description')">
        <DESCRIPTION>${row.sample_description}</DESCRIPTION>
        </py:if>
        <SAMPLE_ATTRIBUTES>
            <py:if test="attributetest(row, 'sample_collection_method')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample_collection_method</TAG>
                <VALUE>${row['sample_collection_method']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sizefraction_lower_threshold')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sizefraction_lower_threshold</TAG>
                <VALUE>${row['sizefraction_lower_threshold']}</VALUE>
                <UNITS>nm</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sizefraction_upper_threshold')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sizefraction_upper_threshold</TAG>
                <VALUE>${row['sizefraction_upper_threshold']}</VALUE>
                <UNITS>nm</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'target_gene', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>target_gene</TAG>
                <VALUE>${row['target_gene']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'target_subfragment', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>target_subfragment</TAG>
                <VALUE>${row['target_subfragment']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'isolation_source')">
            <SAMPLE_ATTRIBUTE>
                <TAG>isolation_source</TAG>
                <VALUE>${row['isolation_source']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'collected_by')">
            <SAMPLE_ATTRIBUTE>
                <TAG>collected_by</TAG>
                <VALUE>${row['collected_by']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'collection_date', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>collection_date</TAG>
                <VALUE>${row['collection_date']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'altitude')">
            <SAMPLE_ATTRIBUTE>
                <TAG>altitude</TAG>
                <VALUE>${row['altitude']}</VALUE>
                <UNITS>m</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'geographic_location_latitude', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic_location_latitude</TAG>
                <VALUE>${row['geographic_location_latitude']}</VALUE>
                <UNITS>DD</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'geographic_location_longitude', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic_location_longitude</TAG>
                <VALUE>${row['geographic_location_longitude']}</VALUE>
                <UNITS>DD</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'geographic_location_region_and_locality')">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic_location_region_and_locality</TAG>
                <VALUE>${row['geographic_location_region_and_locality']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'broadscale_environmental_context', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>broadscale_environmental_context</TAG>
                <VALUE>${row['broadscale_environmental_context']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'local_environmental_context', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>local_environmental_context</TAG>
                <VALUE>${row['local_environmental_context']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'environmental_medium', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>environmental_medium</TAG>
                <VALUE>${row['environmental_medium']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'environmental_sample', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>environmental_sample</TAG>
                <VALUE>${row['environmental_sample']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'geographic_location_country_andor_sea', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic_location_country_andor_sea</TAG>
                <VALUE>${row['geographic_location_country_andor_sea']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'salinity')">
            <SAMPLE_ATTRIBUTE>
                <TAG>salinity</TAG>
                <VALUE>${row['salinity']}</VALUE>
                <UNITS>psu</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'further_details')">
            <SAMPLE_ATTRIBUTE>
                <TAG>further_details</TAG>
                <VALUE>${row['further_details']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'pcr_primers', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>pcr_primers</TAG>
                <VALUE>${row['pcr_primers']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'depth')">
            <SAMPLE_ATTRIBUTE>
                <TAG>depth</TAG>
                <VALUE>${row['depth']}</VALUE>
                <UNITS>m</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:for each="header, tag in extra_attributes.items()">
            <py:if test="attributetest(row, header)">
            <SAMPLE_ATTRIBUTE>
                <TAG>${tag}</TAG>
                <VALUE>${row[header]}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            </py:for>
            <SAMPLE_ATTRIBUTE>
                <TAG>SUBMISSION_TOOL</TAG>
                <VALUE>${tool_name}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>SUBMISSION_TOOL_VERSION</TAG>
                <VALUE>${tool_version}</VALUE>
            </SAMPLE_ATTRIBUTE>
        </SAMPLE_ATTRIBUTES>
    </SAMPLE>
    </py:for>
</SAMPLE_SET>