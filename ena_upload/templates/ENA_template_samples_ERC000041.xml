<?xml version="1.0" encoding="UTF-8"?>
<?python
import pandas as pd
import sys
def attributetest(row, column):
    if hasattr(row, column) and pd.notna(row[column]) and not str(row[column]).isspace():
        return True 
def mandatorytest(row, column, index):
    if hasattr(row, column) and pd.notna(row[column]) and not str(row[column]).isspace():
        return True 
    else:
        print("MISSING VALUE ERROR: The mandatory column '"+ str(column) + "' is not filled in at row '" + str(index) + "'" + "\n")
        sys.exit("This process is terminated")
?>
<SAMPLE_SET xmlns:py="http://genshi.edgewall.org/"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="ftp://ftp.sra.ebi.ac.uk/meta/xsd/sra_1_6/SRA.sample.xsd">
    <py:for each="index, row in df.iterrows()">
    <SAMPLE alias="${row.alias}" center_name="${center}">
        <py:if test="mandatorytest(row, 'title', index)">
        <TITLE>${row.title}</TITLE>
        </py:if>
        <SAMPLE_NAME>
            <py:if test="mandatorytest(row, 'taxon_id', index)">
            <TAXON_ID>${row.taxon_id}</TAXON_ID>
            </py:if>
            <SCIENTIFIC_NAME>${row.scientific_name}</SCIENTIFIC_NAME>
            <py:if test="attributetest(row, 'common_name')">
            <COMMON_NAME>${row.common_name}</COMMON_NAME>
            </py:if>
        </SAMPLE_NAME>
        <py:if test="attributetest(row, 'sample_description')">
        <DESCRIPTION>${row.sample_description}</DESCRIPTION>
        </py:if>
        <SAMPLE_ATTRIBUTES>
            <py:if test="attributetest(row, 'sample_transportation_date')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample_transportation_date</TAG>
                <VALUE>${row['sample_transportation_date']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample_transportation_temperature')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample_transportation_temperature</TAG>
                <VALUE>${row['sample_transportation_temperature']}</VALUE>
                <UNITS>°C</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample_transportation_time')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample_transportation_time</TAG>
                <VALUE>${row['sample_transportation_time']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample_storage_temperature')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample_storage_temperature</TAG>
                <VALUE>${row['sample_storage_temperature']}</VALUE>
                <UNITS>°C</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample_storage_location')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample_storage_location</TAG>
                <VALUE>${row['sample_storage_location']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'instrument_for_dna_concentration_measurement')">
            <SAMPLE_ATTRIBUTE>
                <TAG>instrument_for_dna_concentration_measurement</TAG>
                <VALUE>${row['instrument_for_dna_concentration_measurement']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'read_quality_filter')">
            <SAMPLE_ATTRIBUTE>
                <TAG>read_quality_filter</TAG>
                <VALUE>${row['read_quality_filter']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'dna_concentration')">
            <SAMPLE_ATTRIBUTE>
                <TAG>dna_concentration</TAG>
                <VALUE>${row['dna_concentration']}</VALUE>
                <UNITS>ng/µl</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'isolation_source')">
            <SAMPLE_ATTRIBUTE>
                <TAG>isolation_source</TAG>
                <VALUE>${row['isolation_source']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'collection_date', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>collection_date</TAG>
                <VALUE>${row['collection_date']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'geographic_location_region_and_locality')">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic_location_region_and_locality</TAG>
                <VALUE>${row['geographic_location_region_and_locality']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'amount_or_size_of_sample_collected')">
            <SAMPLE_ATTRIBUTE>
                <TAG>amount_or_size_of_sample_collected</TAG>
                <VALUE>${row['amount_or_size_of_sample_collected']}</VALUE>
                <UNITS>kg</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sampling_time_point')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sampling_time_point</TAG>
                <VALUE>${row['sampling_time_point']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample_storage_duration')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample_storage_duration</TAG>
                <VALUE>${row['sample_storage_duration']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'geographic_location_country_andor_sea', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic_location_country_andor_sea</TAG>
                <VALUE>${row['geographic_location_country_andor_sea']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'receipt_date')">
            <SAMPLE_ATTRIBUTE>
                <TAG>receipt_date</TAG>
                <VALUE>${row['receipt_date']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'links_to_additional_analysis')">
            <SAMPLE_ATTRIBUTE>
                <TAG>links_to_additional_analysis</TAG>
                <VALUE>${row['links_to_additional_analysis']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'isolate', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>isolate</TAG>
                <VALUE>${row['isolate']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sub_species')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sub_species</TAG>
                <VALUE>${row['sub_species']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'further_details')">
            <SAMPLE_ATTRIBUTE>
                <TAG>further_details</TAG>
                <VALUE>${row['further_details']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'nucleic_acid_extraction')">
            <SAMPLE_ATTRIBUTE>
                <TAG>nucleic_acid_extraction</TAG>
                <VALUE>${row['nucleic_acid_extraction']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'library_construction_method')">
            <SAMPLE_ATTRIBUTE>
                <TAG>library_construction_method</TAG>
                <VALUE>${row['library_construction_method']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'protocol')">
            <SAMPLE_ATTRIBUTE>
                <TAG>protocol</TAG>
                <VALUE>${row['protocol']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:for each="header, tag in extra_attributes.items()">
            <py:if test="attributetest(row, header)">
            <SAMPLE_ATTRIBUTE>
                <TAG>${tag}</TAG>
                <VALUE>${row[header]}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            </py:for>
            <SAMPLE_ATTRIBUTE>
                <TAG>SUBMISSION_TOOL</TAG>
                <VALUE>${tool_name}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>SUBMISSION_TOOL_VERSION</TAG>
                <VALUE>${tool_version}</VALUE>
            </SAMPLE_ATTRIBUTE>
        </SAMPLE_ATTRIBUTES>
    </SAMPLE>
    </py:for>
</SAMPLE_SET>