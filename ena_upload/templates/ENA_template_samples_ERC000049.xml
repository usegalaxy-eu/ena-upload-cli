<?xml version="1.0" encoding="UTF-8"?>
<?python
import pandas as pd
import sys
def attributetest(row, column):
    if hasattr(row, column) and pd.notna(row[column]) and not str(row[column]).isspace():
        return True 
def mandatorytest(row, column, index):
    if hasattr(row, column) and pd.notna(row[column]) and not str(row[column]).isspace():
        return True 
    else:
        print("MISSING VALUE ERROR: The mandatory column '"+ str(column) + "' is not filled in at row '" + str(index) + "'" + "\n")
        sys.exit("This process is terminated")
?>
<SAMPLE_SET xmlns:py="http://genshi.edgewall.org/"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="ftp://ftp.sra.ebi.ac.uk/meta/xsd/sra_1_6/SRA.sample.xsd">
    <py:for each="index, row in df.iterrows()">
    <SAMPLE alias="${row.alias}" center_name="${center}">
        <py:if test="mandatorytest(row, 'title', index)">
        <TITLE>${row.title}</TITLE>
        </py:if>
        <SAMPLE_NAME>
            <py:if test="mandatorytest(row, 'taxon_id', index)">
            <TAXON_ID>${row.taxon_id}</TAXON_ID>
            </py:if>
            <SCIENTIFIC_NAME>${row.scientific_name}</SCIENTIFIC_NAME>
            <py:if test="attributetest(row, 'common_name')">
            <COMMON_NAME>${row.common_name}</COMMON_NAME>
            </py:if>
        </SAMPLE_NAME>
        <py:if test="attributetest(row, 'sample_description')">
        <DESCRIPTION>${row.sample_description}</DESCRIPTION>
        </py:if>
        <SAMPLE_ATTRIBUTES>
            <py:if test="attributetest(row, 'observed_biotic_relationship')">
            <SAMPLE_ATTRIBUTE>
                <TAG>observed_biotic_relationship</TAG>
                <VALUE>${row['observed_biotic_relationship']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'known_pathogenicity')">
            <SAMPLE_ATTRIBUTE>
                <TAG>known_pathogenicity</TAG>
                <VALUE>${row['known_pathogenicity']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample_collection_device')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample_collection_device</TAG>
                <VALUE>${row['sample_collection_device']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample_collection_method')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample_collection_method</TAG>
                <VALUE>${row['sample_collection_method']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'metagenomic_source', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>metagenomic_source</TAG>
                <VALUE>${row['metagenomic_source']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'sample_derived_from', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample_derived_from</TAG>
                <VALUE>${row['sample_derived_from']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'project_name', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>project_name</TAG>
                <VALUE>${row['project_name']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'estimated_size')">
            <SAMPLE_ATTRIBUTE>
                <TAG>estimated_size</TAG>
                <VALUE>${row['estimated_size']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'multiplex_identifiers')">
            <SAMPLE_ATTRIBUTE>
                <TAG>multiplex_identifiers</TAG>
                <VALUE>${row['multiplex_identifiers']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'relevant_electronic_resources')">
            <SAMPLE_ATTRIBUTE>
                <TAG>relevant_electronic_resources</TAG>
                <VALUE>${row['relevant_electronic_resources']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'relevant_standard_operating_procedures')">
            <SAMPLE_ATTRIBUTE>
                <TAG>relevant_standard_operating_procedures</TAG>
                <VALUE>${row['relevant_standard_operating_procedures']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'number_of_standard_trnas_extracted')">
            <SAMPLE_ATTRIBUTE>
                <TAG>number_of_standard_trnas_extracted</TAG>
                <VALUE>${row['number_of_standard_trnas_extracted']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'feature_prediction')">
            <SAMPLE_ATTRIBUTE>
                <TAG>feature_prediction</TAG>
                <VALUE>${row['feature_prediction']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'similarity_search_method')">
            <SAMPLE_ATTRIBUTE>
                <TAG>similarity_search_method</TAG>
                <VALUE>${row['similarity_search_method']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'trna_extraction_software')">
            <SAMPLE_ATTRIBUTE>
                <TAG>trna_extraction_software</TAG>
                <VALUE>${row['trna_extraction_software']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'completeness_score')">
            <SAMPLE_ATTRIBUTE>
                <TAG>completeness_score</TAG>
                <VALUE>${row['completeness_score']}</VALUE>
                <UNITS>%</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'completeness_software')">
            <SAMPLE_ATTRIBUTE>
                <TAG>completeness_software</TAG>
                <VALUE>${row['completeness_software']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'completeness_approach')">
            <SAMPLE_ATTRIBUTE>
                <TAG>completeness_approach</TAG>
                <VALUE>${row['completeness_approach']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'binning_software')">
            <SAMPLE_ATTRIBUTE>
                <TAG>binning_software</TAG>
                <VALUE>${row['binning_software']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'reassembly_post_binning')">
            <SAMPLE_ATTRIBUTE>
                <TAG>reassembly_post_binning</TAG>
                <VALUE>${row['reassembly_post_binning']}</VALUE>
                <UNITS>Yes</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'mag_coverage_software')">
            <SAMPLE_ATTRIBUTE>
                <TAG>mag_coverage_software</TAG>
                <VALUE>${row['mag_coverage_software']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'binning_parameters')">
            <SAMPLE_ATTRIBUTE>
                <TAG>binning_parameters</TAG>
                <VALUE>${row['binning_parameters']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'taxonomic_identity_marker')">
            <SAMPLE_ATTRIBUTE>
                <TAG>taxonomic_identity_marker</TAG>
                <VALUE>${row['taxonomic_identity_marker']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'source_of_uvigs', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>source_of_uvigs</TAG>
                <VALUE>${row['source_of_uvigs']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'predicted_genome_type', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>predicted_genome_type</TAG>
                <VALUE>${row['predicted_genome_type']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'predicted_genome_structure', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>predicted_genome_structure</TAG>
                <VALUE>${row['predicted_genome_structure']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'detection_type', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>detection_type</TAG>
                <VALUE>${row['detection_type']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'viral_identification_software', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>viral_identification_software</TAG>
                <VALUE>${row['viral_identification_software']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'otu_classification_approach')">
            <SAMPLE_ATTRIBUTE>
                <TAG>otu_classification_approach</TAG>
                <VALUE>${row['otu_classification_approach']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'otu_sequence_comparison_approach')">
            <SAMPLE_ATTRIBUTE>
                <TAG>otu_sequence_comparison_approach</TAG>
                <VALUE>${row['otu_sequence_comparison_approach']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'otu_database')">
            <SAMPLE_ATTRIBUTE>
                <TAG>otu_database</TAG>
                <VALUE>${row['otu_database']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'uvig_assembly_quality', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>uvig_assembly_quality</TAG>
                <VALUE>${row['uvig_assembly_quality']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'isolation_source', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>isolation_source</TAG>
                <VALUE>${row['isolation_source']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'collection_date', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>collection_date</TAG>
                <VALUE>${row['collection_date']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'altitude')">
            <SAMPLE_ATTRIBUTE>
                <TAG>altitude</TAG>
                <VALUE>${row['altitude']}</VALUE>
                <UNITS>m</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'geographic_location_latitude', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic_location_latitude</TAG>
                <VALUE>${row['geographic_location_latitude']}</VALUE>
                <UNITS>DD</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'geographic_location_longitude', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic_location_longitude</TAG>
                <VALUE>${row['geographic_location_longitude']}</VALUE>
                <UNITS>DD</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'geographic_location_region_and_locality')">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic_location_region_and_locality</TAG>
                <VALUE>${row['geographic_location_region_and_locality']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'broadscale_environmental_context', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>broadscale_environmental_context</TAG>
                <VALUE>${row['broadscale_environmental_context']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'local_environmental_context', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>local_environmental_context</TAG>
                <VALUE>${row['local_environmental_context']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'environmental_medium', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>environmental_medium</TAG>
                <VALUE>${row['environmental_medium']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'elevation')">
            <SAMPLE_ATTRIBUTE>
                <TAG>elevation</TAG>
                <VALUE>${row['elevation']}</VALUE>
                <UNITS>m</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'amount_or_size_of_sample_collected')">
            <SAMPLE_ATTRIBUTE>
                <TAG>amount_or_size_of_sample_collected</TAG>
                <VALUE>${row['amount_or_size_of_sample_collected']}</VALUE>
                <UNITS>kg</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'size_fraction_selected')">
            <SAMPLE_ATTRIBUTE>
                <TAG>size_fraction_selected</TAG>
                <VALUE>${row['size_fraction_selected']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'geographic_location_country_andor_sea', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>geographic_location_country_andor_sea</TAG>
                <VALUE>${row['geographic_location_country_andor_sea']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'host_scientific_name')">
            <SAMPLE_ATTRIBUTE>
                <TAG>host_scientific_name</TAG>
                <VALUE>${row['host_scientific_name']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'source_material_identifiers')">
            <SAMPLE_ATTRIBUTE>
                <TAG>source_material_identifiers</TAG>
                <VALUE>${row['source_material_identifiers']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'host_prediction_approach')">
            <SAMPLE_ATTRIBUTE>
                <TAG>host_prediction_approach</TAG>
                <VALUE>${row['host_prediction_approach']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'host_prediction_estimated_accuracy')">
            <SAMPLE_ATTRIBUTE>
                <TAG>host_prediction_estimated_accuracy</TAG>
                <VALUE>${row['host_prediction_estimated_accuracy']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'experimental_factor')">
            <SAMPLE_ATTRIBUTE>
                <TAG>experimental_factor</TAG>
                <VALUE>${row['experimental_factor']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'taxonomic_classification')">
            <SAMPLE_ATTRIBUTE>
                <TAG>taxonomic_classification</TAG>
                <VALUE>${row['taxonomic_classification']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'annotation_source')">
            <SAMPLE_ATTRIBUTE>
                <TAG>annotation_source</TAG>
                <VALUE>${row['annotation_source']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'reference_for_biomaterial')">
            <SAMPLE_ATTRIBUTE>
                <TAG>reference_for_biomaterial</TAG>
                <VALUE>${row['reference_for_biomaterial']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'reference_databases')">
            <SAMPLE_ATTRIBUTE>
                <TAG>reference_databases</TAG>
                <VALUE>${row['reference_databases']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'single_cell_or_viral_particle_lysis_approach')">
            <SAMPLE_ATTRIBUTE>
                <TAG>single_cell_or_viral_particle_lysis_approach</TAG>
                <VALUE>${row['single_cell_or_viral_particle_lysis_approach']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'single_cell_or_viral_particle_lysis_kit_protocol')">
            <SAMPLE_ATTRIBUTE>
                <TAG>single_cell_or_viral_particle_lysis_kit_protocol</TAG>
                <VALUE>${row['single_cell_or_viral_particle_lysis_kit_protocol']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sample_material_processing')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sample_material_processing</TAG>
                <VALUE>${row['sample_material_processing']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'nucleic_acid_extraction')">
            <SAMPLE_ATTRIBUTE>
                <TAG>nucleic_acid_extraction</TAG>
                <VALUE>${row['nucleic_acid_extraction']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'nucleic_acid_amplification')">
            <SAMPLE_ATTRIBUTE>
                <TAG>nucleic_acid_amplification</TAG>
                <VALUE>${row['nucleic_acid_amplification']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'library_size')">
            <SAMPLE_ATTRIBUTE>
                <TAG>library_size</TAG>
                <VALUE>${row['library_size']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'library_reads_sequenced')">
            <SAMPLE_ATTRIBUTE>
                <TAG>library_reads_sequenced</TAG>
                <VALUE>${row['library_reads_sequenced']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'library_vector')">
            <SAMPLE_ATTRIBUTE>
                <TAG>library_vector</TAG>
                <VALUE>${row['library_vector']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'library_screening_strategy')">
            <SAMPLE_ATTRIBUTE>
                <TAG>library_screening_strategy</TAG>
                <VALUE>${row['library_screening_strategy']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'assembly_software', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>assembly_software</TAG>
                <VALUE>${row['assembly_software']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'wga_amplification_approach')">
            <SAMPLE_ATTRIBUTE>
                <TAG>wga_amplification_approach</TAG>
                <VALUE>${row['wga_amplification_approach']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'wga_amplification_kit')">
            <SAMPLE_ATTRIBUTE>
                <TAG>wga_amplification_kit</TAG>
                <VALUE>${row['wga_amplification_kit']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'sorting_technology')">
            <SAMPLE_ATTRIBUTE>
                <TAG>sorting_technology</TAG>
                <VALUE>${row['sorting_technology']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="mandatorytest(row, 'virus_enrichment_approach', index)">
            <SAMPLE_ATTRIBUTE>
                <TAG>virus_enrichment_approach</TAG>
                <VALUE>${row['virus_enrichment_approach']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'adapters')">
            <SAMPLE_ATTRIBUTE>
                <TAG>adapters</TAG>
                <VALUE>${row['adapters']}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:if test="attributetest(row, 'depth')">
            <SAMPLE_ATTRIBUTE>
                <TAG>depth</TAG>
                <VALUE>${row['depth']}</VALUE>
                <UNITS>m</UNITS>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            <py:for each="header, tag in extra_attributes.items()">
            <py:if test="attributetest(row, header)">
            <SAMPLE_ATTRIBUTE>
                <TAG>${tag}</TAG>
                <VALUE>${row[header]}</VALUE>
            </SAMPLE_ATTRIBUTE>
            </py:if>
            </py:for>
            <SAMPLE_ATTRIBUTE>
                <TAG>SUBMISSION_TOOL</TAG>
                <VALUE>${tool_name}</VALUE>
            </SAMPLE_ATTRIBUTE>
            <SAMPLE_ATTRIBUTE>
                <TAG>SUBMISSION_TOOL_VERSION</TAG>
                <VALUE>${tool_version}</VALUE>
            </SAMPLE_ATTRIBUTE>
        </SAMPLE_ATTRIBUTES>
    </SAMPLE>
    </py:for>
</SAMPLE_SET>